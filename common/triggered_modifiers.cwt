types = {
    type[triggered_modifier] = {
        path_strict = yes
        path = "game/common/triggered_modifiers"

        localisation = {
            name = "$"
            description = "desc_$"
        }
    }
}

# Info from, you guessed it, wiki
## replace_scope = { this = character root = character }
triggered_modifier = {
    ### Same icons as event modifier icons. Frames of GFX_modifier_icons.
    icon = enum[event_modifier_icons]

    ### Conditions for the character to be eligible for checking the trigger.
    potential = {
        alias_name[trigger] = alias_match_left[trigger]
    }

    ### Conditions for the character to receive the modifier.
    trigger = {
        alias_name[trigger] = alias_match_left[trigger]
    }

    ## cardinality = 0..inf
    alias_name[modifier] = alias_match_left[modifier]

    ## cardinality = 0..1
    ### If no, the modifier is completely inactive. What?
    active = bool
}